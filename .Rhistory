grid.arrange(graph_c, graph_d, nrow = 1)
grid.arrange(graph_c, graph_d, nrow = 1)
graph_d <- ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,10)) +
scale_x_continuous(breaks = seq(0, 10, 1), limits = c(-0.5,10))
grid.arrange(graph_c, graph_d, nrow = 1)
library(data.table)
library(ggplot2)
library(gridExtra)
source("./data/themes.R")
source("./data/palettes.R")
x <- c(1.0,	0.2, 1.2,	1.0, 0.3,	0.1, 0.1,	0.4, 3.2,	0.3, 0.4,	1.8, 0.9,	0.1, 0.2,	0.3, 0.5)
x <- sort(x)
y <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
y <- sort(y)
y_interp <- x
for (i in 1:length(x)){
j <- ((length(y) * (i - 0.4)) / (length(x) + 0.2)) + 0.4
j_prime <- as.numeric(as.integer(j))
y_interp[i] <- y[j_prime] + ((j - j_prime) * (y[j_prime + 1] - y[j_prime]))
}
chloride_concentration <- data.table(x,y_interp)
setnames(chloride_concentration, c("Qtz_Monzonite", "Granodiorite"))
graph_a <- ggplot(chloride_concentration, aes(x = Qtz_Monzonite, y = Granodiorite)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
annotate("text", x = 0.5, y = 9, label = "• DATA QUANTILES \n X = Y") +
scale_color_manual(values = palettes_bright$colset_cheer_brights) +
theme_generic +
labs(y = "GRANODIORITE", x = "QTZ MONZONITE", fill = "Dose (mg)") +
scale_x_continuous(breaks = seq(0, 3.5, 0.5), limits = c(0, 3.5)) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0, 10))
graph_b <- ggplot(chloride_concentration) +
geom_boxplot(data = as.data.table(y), aes(x = -1, y = y), alpha = 0.4) +
geom_boxplot(aes(x = 1, y = Qtz_Monzonite), alpha = 0.4) +
labs(x = NULL, y = "Chloride Concentration") +
scale_x_continuous(limits = c(-2, 2), breaks = c(-1, 1), labels = c("GRANODIORITE", "QTZ MONZONITE")) +
scale_y_continuous(breaks = seq(0, 10, 2.5), limits = c(0,10)) +
scale_fill_manual(values = palettes_bright$colset_cheer_brights) +
scale_color_manual(values = palettes_bright$colset_cheer_brights) +
theme_generic +
theme(legend.position = "none", panel.grid = element_blank())
graph_c <- ggplot(as.data.table(y), aes(x = y)) +
geom_histogram(binwidth = 1, color = "white", fill = palettes_bright$colset_cheer_brights[1]) +
theme_generic +
labs(x = "Granodiorite Chloride Concentration", y = "NUMBER OF OCCURRENCES") +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,10)) +
scale_x_continuous(breaks = seq(0, 10, 1), limits = c(-0.5,10))
graph_d <- ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL)
graph_a
graph_b
grid.arrange(graph_c, graph_d, nrow = 1)
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,10)) +
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,10))
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2))
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
scale_x_continuous(breaks = seq(0, 10, 1))
graph_d <- ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
scale_x_continuous(breaks = seq(0, 10, 1))
grid.arrange(graph_c, graph_d, nrow = 1)
View(graph_d)
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
scale_x_continuous(breaks = seq(0, 10, 1)), limits = c(0,10)
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
scale_x_continuous(breaks = seq(0, 10, 1)), limits = c(0,10))
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2)) +
scale_x_continuous(breaks = seq(0, 10, 1), limits = c(0, 10))
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,11))
graph_d <- ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,11))
grid.arrange(graph_c, graph_d, nrow = 1)
grid.arrange(graph_c, graph_d, nrow = 1)
ggplot(as.data.table(y), aes(x = y)) +
geom_histogram(binwidth = 1, color = "white", fill = palettes_bright$colset_cheer_brights[1]) +
theme_generic +
labs(x = "Granodiorite Chloride Concentration", y = "NUMBER OF OCCURRENCES") +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,11))
graph_c <- ggplot(as.data.table(y), aes(x = y)) +
geom_histogram(binwidth = 1, color = "white", fill = palettes_bright$colset_cheer_brights[1]) +
theme_generic +
labs(x = "Granodiorite Chloride Concentration", y = "NUMBER OF OCCURRENCES") +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,11)) +
scale_x_continuous(breaks = seq(0, 10, 1), limits = c(0,11))
grid.arrange(graph_c, graph_d, nrow = 1)
graph_c <- ggplot(as.data.table(y), aes(x = y)) +
geom_histogram(binwidth = 1, color = "white", fill = palettes_bright$colset_cheer_brights[1]) +
theme_generic +
labs(x = "Granodiorite Chloride Concentration", y = "NUMBER OF OCCURRENCES") +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,11)) +
scale_x_continuous(breaks = seq(0, 10, 1), limits = c(-1,11))
grid.arrange(graph_c, graph_d, nrow = 1)
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(bins = 4, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,11)) +
scale_x_continuous(breaks = seq(0, 10, 1), limits = c(-1,11))
ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(binwidth = 1, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,11)) +
scale_x_continuous(breaks = seq(0, 10, 1), limits = c(-1,11))
library(data.table)
library(ggplot2)
library(gridExtra)
source("./data/themes.R")
source("./data/palettes.R")
x <- c(1.0,	0.2, 1.2,	1.0, 0.3,	0.1, 0.1,	0.4, 3.2,	0.3, 0.4,	1.8, 0.9,	0.1, 0.2,	0.3, 0.5)
x <- sort(x)
y <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
y <- sort(y)
y_interp <- x
for (i in 1:length(x)){
j <- ((length(y) * (i - 0.4)) / (length(x) + 0.2)) + 0.4
j_prime <- as.numeric(as.integer(j))
y_interp[i] <- y[j_prime] + ((j - j_prime) * (y[j_prime + 1] - y[j_prime]))
}
chloride_concentration <- data.table(x,y_interp)
setnames(chloride_concentration, c("Qtz_Monzonite", "Granodiorite"))
graph_a <- ggplot(chloride_concentration, aes(x = Qtz_Monzonite, y = Granodiorite)) +
geom_point() +
geom_abline(intercept = 0, slope = 1) +
annotate("text", x = 0.5, y = 9, label = "• DATA QUANTILES \n X = Y") +
scale_color_manual(values = palettes_bright$colset_cheer_brights) +
theme_generic +
labs(y = "GRANODIORITE", x = "QTZ MONZONITE", fill = "Dose (mg)") +
scale_x_continuous(breaks = seq(0, 3.5, 0.5), limits = c(0, 3.5)) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0, 10))
graph_b <- ggplot(chloride_concentration) +
geom_boxplot(data = as.data.table(y), aes(x = -1, y = y), alpha = 0.4) +
geom_boxplot(aes(x = 1, y = Qtz_Monzonite), alpha = 0.4) +
labs(x = NULL, y = "Chloride Concentration") +
scale_x_continuous(limits = c(-2, 2), breaks = c(-1, 1), labels = c("GRANODIORITE", "QTZ MONZONITE")) +
scale_y_continuous(breaks = seq(0, 10, 2.5), limits = c(0,10)) +
scale_fill_manual(values = palettes_bright$colset_cheer_brights) +
scale_color_manual(values = palettes_bright$colset_cheer_brights) +
theme_generic +
theme(legend.position = "none", panel.grid = element_blank())
graph_c <- ggplot(as.data.table(y), aes(x = y)) +
geom_histogram(binwidth = 1, color = "white", fill = palettes_bright$colset_cheer_brights[1]) +
theme_generic +
labs(x = "Granodiorite Chloride Concentration", y = "NUMBER OF OCCURRENCES") +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,11)) +
scale_x_continuous(breaks = seq(0, 10, 1), limits = c(-1,11))
graph_d <- ggplot(chloride_concentration, aes(x = Qtz_Monzonite)) +
geom_histogram(binwidth = 1, color = "white", fill = palettes_bright$colset_cheer_brights[2]) +
theme_generic +
labs(x = "Qtz Monzonite Chloride Concentration", y = NULL) +
scale_y_continuous(breaks = seq(0, 10, 2), limits = c(0,11)) +
scale_x_continuous(breaks = seq(0, 10, 1), limits = c(-1,11))
graph_a
graph_b
grid.arrange(graph_c, graph_d, nrow = 1)
graph_a
graph_b
x <- c(1.0,	0.2, 1.2,	1.0, 0.3,	0.1, 0.1,	0.4, 3.2,	0.3, 0.4,	1.8, 0.9,	0.1, 0.2,	0.3, 0.5)
x <- sort(x)
mean_x <- mean(x)
sd_x <- sd(x)
n <- length(x)
??pnorm
ALPHA <- 1 - 0.95
t.test(x)
qt(ALPHA)
qt(ALPHA, df = n)
qt(ALPHA, df = n - 1)
x <- c(1.0,	0.2, 1.2,	1.0, 0.3,	0.1, 0.1,	0.4, 3.2,	0.3, 0.4,	1.8, 0.9,	0.1, 0.2,	0.3, 0.5)
x <- sort(x)
mean_x <- mean(x)
s2_x <- var(x)
n <- length(x)
ALPHA <- 1 - 0.95
t <- qt(ALPHA, df = n - 1)
t <- qt(ALPHA / 2, df = n - 1)
lower <- mean_x - (t * sqrt(s2_x / n))
x <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
x <- sort(x)
median_x <- median(x)
x <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
x <- sort(x)
median_x <- median(x)
library(rcompanion)
install.packages("rcompanion")
n <- length(x)
library(rcompanion)
groupwiseMedian(x ~ 1)
qbinom(0.05/2,18)
qbinom(5, 18, 0.05)
qbinom(0.95, 18, 0.05)
qbinom(0.95, 18, 0.5)
qbinom(0.025, 20, 0.5)
qbinom(0.025, 18, 0.5)
n <- length(x)
R_u <- n - R_l
R_l <- qbinom(0.025, 18, 0.5)
R_u <- n - R_l
x <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
n <- length(x)
x <- c(1.0,	0.2, 1.2,	1.0, 0.3,	0.1, 0.1,	0.4, 3.2,	0.3, 0.4,	1.8, 0.9,	0.1, 0.2,	0.3, 0.5)
n <- length(x)
x <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
x <- sort(x)
median_x <- median(x)
n <- length(x)
R_l <- qbinom(0.025, 18, 0.5)
R_u <- n - R_l
R_l <- qbinom(0.025, n, 0.5)
x <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
x <- sort(x)
x <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
x <- sort(x)
median_x <- median(x)
n <- length(x)
R_l <- qbinom(0.025, n, 0.5)
R_u <- n - R_l
x_l <- x[R_l]
x_u <- x[R_u]
nonparametric <- paste0(x_l, " ≤ C_0.5 ≤ ", x_u)
x <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
x <- sort(x)
median_x <- median(x)
N <- length(x)
ALPHA <- 1 - 0.95
R_l <- qbinom(ALPHA / 2, N, 0.5)
R_u <- n - R_l
x_l <- x[R_l]
x_u <- x[R_u]
nonparametric <- paste0(x_l, " ≤ C_0.5 ≤ ", x_u)
x <- c(6.0, 0.5, 0.4, 0.7, 0.8, 6.0, 5.0, 0.6, 1.2, 0.3, 0.2, 0.5, 0.5, 10, 0.2, 0.2, 1.7, 3.0)
x <- sort(x)
median_x <- median(x)
N <- length(x)
ALPHA <- 1 - 0.95
R_l <- qbinom(ALPHA / 2, N, 0.5)
R_u <- n - R_l
x_l <- x[R_l]
x_u <- x[R_u]
nonparametric <- paste0(x_l, " ≤ C_0.5 ≤ ", x_u)
y <- log(x)
GM_x <- exp(mean(y))
t <- qt(ALPHA / 2, df = n - 1)
t <- qt(ALPHA / 2, df = N - 1)
y_l <- exp(mean(y) - (t * sqrt(var(y) / N)))
var(y)
var(y)/N
sqrt(var(y)/N)
t*sqrt(var(y)/N)
mean(y)
mean(y) - t*sqrt(var(y)/N)
exp(0.5901233)
mean(y) - (t * sqrt(var(y) / N)))
mean(y) - (t * sqrt(var(y) / N))
mean(y) + (t * sqrt(var(y) / N))
exp(mean(y) + (t * sqrt(var(y) / N)))
t <- qt(ALPHA / 2, df = N - 1)
t <- abs(qt(ALPHA / 2, df = N - 1))
y_l <- exp(mean(y) - (t * sqrt(var(y) / N)))
y_u <- exp(mean(y) + (t * sqrt(var(y) / N)))
x <- c(1.0,	0.2, 1.2,	1.0, 0.3,	0.1, 0.1,	0.4, 3.2,	0.3, 0.4,	1.8, 0.9,	0.1, 0.2,	0.3, 0.5)
x <- sort(x)
mean_x <- mean(x)
s2_x <- var(x)
N <- length(x)
ALPHA <- 1 - 0.95
t <- abs(qt(ALPHA / 2, df = N - 1))
x_l <- mean_x - (t * sqrt(s2_x / n))
x_l <- mean_x - (t * sqrt(s2_x / N))
x_u <- mean_x + (t * sqrt(s2_x / N))
y <- log(x)
mean_y <- mean(y)
s2_y <- var(y)
mean_lognorm_x <- exp(mean_y + (0.5 * s2_y))
Point_estimates <- paste0("Point estimates:    mean = ", mean_x,
" (assuming normal distribution)\n",
"                    mean = ", mean_lognorm_x,
"(assuming a lognormal distribution).")
Point_estimates
Point_estimates <- paste0("Point estimates:    mean = ", mean_x,
" (assuming normal distribution) \n",
"                    mean = ", mean_lognorm_x,
"(assuming a lognormal distribution).")
Point_estimates
paste0("Point estimates:    mean = ", mean_x, " (assuming normal distribution)")
paste0("                    mean = ", mean_lognorm_x, "(assuming a lognormal distribution).")
ln_1 <- paste0("Point estimates:    mean = ", mean_x, " (assuming normal distribution)")
ln_2 <- paste0("                    mean = ", mean_lognorm_x, "(assuming a lognormal distribution).")
cat(ln_1 , ln_2, sep = "\n")
library(data.table)
x <- fread('data/well_yields_virginia.csv')
x <- fread('data/well_yields_virginia.csv')
mean_x <- mean(x$unit_well_yield)
s2_x <- var(x$unit_well_yield)
N <- length(x$unit_well_yield)
ALPHA <- 1 - 0.95
t <- abs(qt(ALPHA / 2, df = N - 1))
PI_l <- mean_x - (t * sqrt(s2_x + (s2_x / N)))
PI_l <- mean_x + (t * sqrt(s2_x + (s2_x / N)))
PI_l <- mean_x - (t * sqrt(s2_x + (s2_x / N)))
PI_u <- mean_x + (t * sqrt(s2_x + (s2_x / N)))
x <- fread('data/well_yields_virginia.csv')
x <- x$unit_well_yield
x <- fread('data/well_yields_virginia.csv')
x <- x$unit_well_yield
x< - sort(x)
x <- sort(x)
mean_x <- mean(x)
s2_x <- var(x)
N <- length(x)
ALPHA <- 1 - 0.95
t <- abs(qt(ALPHA / 2, df = N - 1))
PI_l <- mean_x - (t * sqrt(s2_x + (s2_x / N)))
PI_u <- mean_x + (t * sqrt(s2_x + (s2_x / N)))
sol_0 <- "Parametric 95% prediction interval: "
sol_1 <- paste0(PI_l, " to ", PI_u, " gallons/min/foot. Includes 0.85, so same distribution.")
low_idx <- (ALPHA / 2) * (N + 1)
up_idx <- (1 - (ALPHA / 2)) * (N + 1)
low_idx <- as.integer(low_idx)
low_idx <- (ALPHA / 2) * (N + 1)
low_idx <- c(as.integer(low_idx), as.integer(low_idx) + 1)
up_idx <- (1 - (ALPHA / 2)) * (N + 1)
low_idx <- (ALPHA / 2) * (N + 1)
low_idxs <- c(as.integer(low_idx), as.integer(low_idx) + 1)
up_idx <- (1 - (ALPHA / 2)) * (N + 1)
up_idxs <- c(as.integer(up_idx), as.integer(up_idx) + 1)
low_idxs[0]
low_idxs[1]
x[low_idxs[1]]
(x[low_idxs[2]] - x[low_idxs[1]])
x[low_idxs[2]]
x <- fread('data/appendix_c2.csv')
View(x)
x <- x$Flow_cfs
x <- sort(x)
mean_x <- mean(x)
sd_x <- sd(x)
var(x)
se(x)
s2_x <- var(x)
N <- length(x)
ALPHA <- 1 - 0.95
t <- abs(qt(ALPHA / 2, df = N - 1))
x_l <- mean_x - (t * sqrt(s2_x / N))
x_u <- mean_x + (t * sqrt(s2_x / N))
mean_x - x_l
x_u - mean_x
mean_x_range <- mean_x - x_l
x <- fread('data/appendix_c2.csv')
ggplot(as.data.table(y), aes(x = Flow_cfs)) +
geom_density()
library(ggplot2)
x <- fread('data/appendix_c2.csv')
graph_a <- ggplot(as.data.table(y), aes(x = Flow_cfs)) +
geom_density()
graph_a <- ggplot(x, aes(x = Flow_cfs)) +
geom_density()
ggplot(x, aes(x = Flow_cfs)) +
geom_density()
fread('data/appendix_c2.csv')
graph_a <- ggplot(x, aes(x = Flow_cfs), color = "white", fill = palettes_bright$colset_cheer_brights[1])
ggplot(x, aes(x = Flow_cfs)) +
geom_density(color = "white", fill = palettes_bright$colset_cheer_brights[1])
source("./data/themes.R")
source("./data/palettes.R")
ggplot(x, aes(x = Flow_cfs)) +
geom_density(color = "white", fill = palettes_bright$colset_cheer_brights[1])
ggplot(x, aes(x = Flow_cfs)) +
geom_density(color = "black", fill = palettes_bright$colset_cheer_brights[2])
ggplot(x, aes(x = Flow_cfs)) +
geom_density(color = "black", fill = palettes_bright$colset_cheer_brights[2], alpha=0.4)
ggplot(x, aes(x = Flow_cfs)) +
geom_density(color = "black", fill = palettes_bright$colset_cheer_brights[2], alpha=0.4) +
theme_generic +
labs(x = "Flow in cfs", y = "Density") +
scale_x_continuous(limits = c(0,1500))
graph_a <- ggplot(x, aes(x = Flow_cfs)) +
geom_density(color = "black", fill = palettes_bright$colset_cheer_brights[2], alpha=0.4) +
theme_generic +
labs(x = "Flow in cfs", y = "DENSITY") +
scale_x_continuous(limits = c(0,1500))
x <- x$Flow_cfs
x <- sort(x)
mean_x <- mean(x)
s2_x <- var(x)
N <- length(x)
ALPHA <- 1 - 0.95
t <- abs(qt(ALPHA / 2, df = N - 1))
x_l <- mean_x - (t * sqrt(s2_x / N))
x_u <- mean_x + (t * sqrt(s2_x / N))
mean_x_range <- mean_x - x_l
sol_0 <- "The data look relatively symmetric, so no logs taken."
sol_1 <- paste0("mean:    ", mean_x, " ± ", mean_x_range, ", or ")
sol_2 <- paste0(x_l, " to ", x_u)
median_x <- meadian(x)
median_x <- median(x)
R_l <- qbinom(ALPHA / 2, N, 0.5)
R_u <- n - R_l
R_u <- N - R_l
x <- fread('data/appendix_c3.csv')
View(x)
x <- as.vector(x)
View(x)
x <- as.vector(t(x))
x <- sort(x)
mean_x <- mean(x)
sd_x <- sd(x)
qnorm(0.9,mean=70,sd=3)
qnorm(0.9, mean = mean_x, sd = sd_x)
quantile(x, prob = 0.9, type = 2)
quantile(x, prob = 0.9)
x <- fread('data/appendix_c3.csv')
mean(x)
View(x)
x <- as.vector(t(x))
x <- sort(x)
x <- fread('data/appendix_c3.csv')
View(x)
x <- fread('data/appendix_c3.csv')
x <- as.vector(t(x))
x <- sort(x)
mean_x <- mean(x)
sd_x <- sd(x)
quantile(x, prob = 0.9, type = 2)
quantile(x, prob = 0.9, type = 2, names = FALSE)
x <- fread('data/appendix_c3.csv')
x <- as.vector(t(x))
quantile(x, prob = 0.9, type = 2, names = FALSE)
quantile(x, prob = 0.9, type = 2, names = FALSE, na.rm = TRUE)
x <- fread('data/appendix_c3.csv')
x <- as.vector(t(x))
x <- fread('data/appendix_c3.csv')
quantile(x, prob = 0.1, type = 2, names = FALSE, na.rm = TRUE)
x <- fread('data/appendix_c3.csv')
x <- as.vector(t(x))
x <- sort(x)
mean_x <- mean(x)
sd_x <- sd(x)
quantile(x, prob = 0.1, type = 2, names = FALSE, na.rm = TRUE)
qnorm(0.1, mean = mean_x, sd = sd_x)
quantile(x, prob = 0.1)
366*0.9
366*0.1
N <- length(x)
idx_10 <-  N * (0.1)
x_10 <- x[idxs[1]] + ((idx_10 - idx[1]) * (x[idxs[2]] - x[idxs[1]]))
idx_10 <-  N * (0.1)
idxs <- c(as.integer(idx_10), as.integer(idx_10) + 1)
x_10 <- x[idxs[1]] + ((idx_10 - idx[1]) * (x[idxs[2]] - x[idxs[1]]))
x_10 <- x[idxs[1]] + ((idx_10 - idxs[1]) * (x[idxs[2]] - x[idxs[1]]))
qnorm(0.95, mean = mean_x, sd = sd_x)
qnorm(0.95, mean = 0, sd = 1)
p <- 0.1
np <-  N * p
idxs <- c(as.integer(np), as.integer(np) + 1)
x_10 <- x[idxs[1]] + ((np - idxs[1]) * (x[idxs[2]] - x[idxs[1]]))
z_095 <- qnorm(0.95, mean = 0, sd = 1)
R_u <-  np + (z_095 * sqrt(np * (1 - p))) + 0.5
x_u <- x[as.integer(R_u)]
x_u <- as.numeric(x[as.integer(R_u)])
z_095 <- qnorm((1 - ALPHA), mean = 0, sd = 1)
ALPHA <- 0.05
z_095 <- qnorm((1 - ALPHA), mean = 0, sd = 1)
R_u <-  np + (z_095 * sqrt(np * (1 - p))) + 0.5
x_u <- as.numeric(x[as.integer(R_u)])
R_l <- qbinom(ALPHA / 2, N, 0.1)
R_l <- qbinom(ALPHA, N, 0.1)
R_l <- qbinom(ALPHA*2, N, 0.1)
